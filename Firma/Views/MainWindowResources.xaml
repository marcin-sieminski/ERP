<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Firma.ViewModels"
                    xmlns:views="clr-namespace:Firma.Views">
    
    <!--Tu połączenie View z ViewModel zakładek.-->
    <DataTemplate DataType="{x:TypeExtension vm:WszystkieTowaryViewModel}">
        <views:WszystkieTowaryView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:TypeExtension vm:WszystkieGminyViewModel}">
        <views:WszystkieGminyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:TypeExtension vm:WszystkieKrajeViewModel}">
        <views:WszystkieKrajeView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:TypeExtension vm:WszystkieMiastaViewModel}">
        <views:WszystkieMiastaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:TypeExtension vm:NowyTowarViewModel}">
        <views:NowyTowarView/>
    </DataTemplate>

    <DataTemplate DataType="{x:TypeExtension vm:NowaFakturaViewModel}">
        <views:NowaFakturaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:TypeExtension vm:WszystkieFakturyViewModel}">
        <views:WszystkieFakturyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:TypeExtension vm:WszyscyKontrahenciViewModel}">
        <views:WszyscyKontrahenciView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NowyKontrahentViewModel}">
        <views:NowyKontrahentView/>
    </DataTemplate>

    <DataTemplate DataType="{x:TypeExtension vm:WszyscyPracownicyViewModel}">
        <views:WszyscyPracownicyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NowyPracownikViewModel}">
        <views:NowyPracownikView/>
    </DataTemplate>
    <!--Tu koniec łączenia View z ViewModel.-->

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayName}" Command="{Binding Path=Command}" Margin="6" Padding="5"  Background="LightGray" BorderThickness="0"></Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>

    <Style x:Key="ToolbarMain" TargetType="{x:Type ToolBar}" >
        <Setter Property="Background" Value="LightGray"></Setter>
    </Style>

    <Style x:Key="MenuMain" TargetType="Menu">
        <Setter Property="Background" Value="LightGray"></Setter>
        <Setter Property="Margin" Value="3,3,3,3"></Setter>
    </Style>

    <Style x:Key="StatusBarMain" TargetType="StatusBar">
        <Setter Property="Background" Value="LightGray"></Setter>
    </Style>

    <Style x:Key="GridMainWindow" TargetType="Grid">
        <Setter Property="Background" Value="#E6E6E6"></Setter>
    </Style>

    

</ResourceDictionary>